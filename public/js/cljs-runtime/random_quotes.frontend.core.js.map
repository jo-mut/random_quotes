{"version":3,"sources":["random_quotes/frontend/core.cljs"],"mappings":";;AAMA,AAAKA,6CAAe,gDAAA,hDAACC;AAErB,oCAAA,pCAAMC,gFACHC;AADH,AAAA,0FAAA,8CAAA,2CAAA,wDAAA,4BAEmCA;;AAEnC,6CAAA,7CAAMC;AAAN,AACE,GAAM,CAAA,AAAAC,+DAAA,/CAAOL;AAAb,OACM,MAAA,NAACM,AACD,gDAAO,WAAKC,3DAEZ,PAEA;AAJO,AACE,OAAOA;SACT,WAAKC;AAAL,AACE,OAACC,sBAAOT,2CAAe,AAACU,mDAAQF;UACjC,WAAKG;AAAL,AACE,mBAAA,ZAACC,uCAA0CD;;;AAP3D;;;AASF,kCAAA,lCAAME;AAAN,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,qHAAA,mFAAA,mDAAA,2CAAA,wDAAA,gIAKI,kBAAA,AAAAR,6DAAA,7CAAOL,6CACL,iBAAMO,WAAS,mDAAA,AAAAF,nDAACK,mEAASV;AAAzB,AACE,yGAAA,zGAACc,iHAAgB,yGAAA,zGAACC,4CAAI,qDAAA,rDAACA,4CAAIR;;AAD7B,4HAAA,AAAAF,lCAEGH,kDAAOF;WARhB,mFAAA,yDAAA,2CAAA,wDAAA,qJAAA,1YAKI,ucAMoB;AAAA,AAAO,OAACI;WAXhC;;AAgBA,mCAAA,nCAAeY;AAAf,AACE,wDAAA,jDAACC,oIAAaJ,wCAAK,wBAAA,xBAAiBK","names":["random-quotes.frontend.core/fetched-advice","reagent.core.atom","random-quotes.frontend.core/quote","advice","random-quotes.frontend.core/fetch-api-data","cljs.core/deref","js/fetch","response","data","cljs.core/reset!","cljs.core.js__GT_clj","error","js/console.log","random-quotes.frontend.core/app","cljs.core.println","cljs.core.get","random-quotes.frontend.core/init","reagent.dom.render","js/document"],"sourcesContent":["(ns random-quotes.frontend.core\n  (:require\n   [reagent.dom :as rdom]\n   [\"react\" :as react]\n   [reagent.core :as r]))\n\n(def fetched-advice (r/atom nil))\n\n(defn quote\n  [advice]\n  [:p {:class \"p-5 text-blue-500\"} advice])\n\n(defn fetch-api-data []\n  (when (nil? @fetched-advice)\n    (-> (js/fetch \"https://api.adviceslip.com/advice\")\n        (.then (fn [response]\n                 (.json response)))\n        (.then (fn [data]\n                 (reset! fetched-advice (js->clj data))))\n        (.catch (fn [error]\n                  (js/console.log \"Error fetching API data:\" error))))))\n\n(defn app []\n  [:div {:class \"flex items-center justify-center h-screen bg-custom-bg \n                 bg-test-color bg-cover bg-center\"}\n   [:div {:class \"flex flex-col items-center justify-center p-10 bg-white shadow-lg \n                  rounded-2xl h-[200px] w-[600px]\"}\n    (when @fetched-advice\n      (let [response (js->clj @fetched-advice)]\n        (println \"Quote\" (get (get response \"slip\") :advice))\n        [quote @fetched-advice]))\n    [:button {:class \"px-6 py-3 bg-[orangered] text-white rounded-md focus:outline-none \n                      focus:ring-2 focus:ring-indigo-500 active:bg-[orangered]\"\n              :on-click (fn [] (fetch-api-data))}\n     \"GIVE ME ADVICE\"]]])\n\n\n\n(defn ^:export init []\n  (rdom/render [app] (.getElementById js/document \"app\")))\n"]}